import streamlit as st
from docx import Document
from PyPDF2 import PdfReader
import openai
import tempfile
import os

st.set_page_config(page_title="ููุตุฉ ุฅุนุฏุงุฏ ุงูุนุฑูุถ - ูุชูุงุฒู", layout="centered")
st.title("๐ ููุตุฉ ุฅุนุฏุงุฏ ุงูุนุฑูุถ - ูุชูุงุฒู")
st.markdown("ูู ุจุฑูุน ูุฑุงุณุฉ ุงูุดุฑูุท ูุณูุชู ุชูููุฏ ุนุฑุถ ููู ุงุญุชุฑุงูู ุจุงุณุชุฎุฏุงู ChatGPT")

# ูุฑุงุกุฉ ููุชุงุญ OpenAI API ูู ูุชุบูุฑ ุงูุจูุฆุฉ ุงูุขูู
openai.api_key = os.environ.get("OPENAI_API_KEY")

uploaded_file = st.file_uploader("๐ค ุงุฑูุน ูุฑุงุณุฉ ุงูุดุฑูุท (PDF)", type=["pdf"])
project_name = st.text_input("๐ ุงุณู ุงููุดุฑูุน")
client_name = st.text_input("๐๏ธ ุงุณู ุงูุฌูุฉ")
gov_logo = st.file_uploader("๐๏ธ ุดุนุงุฑ ุงูุฌูุฉ ุงูุญููููุฉ (ุงุฎุชูุงุฑู)", type=["png", "jpg"])

# ุงุณุชุฎุฑุงุฌ ุงููุต ูู PDF
@st.cache_data
def extract_text_from_pdf(file):
    reader = PdfReader(file)
    text = ""
    for page in reader.pages:
        text += page.extract_text() + "\n"
    return text

# ุชูููุฏ ุงูุนุฑุถ ุงูููู ุจุงุณุชุฎุฏุงู ChatGPT (ุงูุชูุงูู ูุน openai>=1.0.0)
def generate_proposal(content, project, client):
    system_msg = """
    ุฃูุช ูุณุงุนุฏ ูุญุชุฑู ูุชุฎุตุต ูู ูุชุงุจุฉ ุงูุนุฑูุถ ุงููููุฉ. ุงูุฑุฌุงุก ูุชุงุจุฉ ุนุฑุถ ููู ูุชูุงูู ุจุงููุบุฉ ุงูุนุฑุจูุฉ ูุดุฑูุฉ ุงุณุชุดุงุฑูุฉ ุณุนูุฏูุฉ ุชุฏุนู \"ูุชูุงุฒู\".
    ุงูุนุฑุถ ูุฌุจ ุฃู ูุดูู ุงูุนูุงุตุฑ ุงูุชุงููุฉ:
    1. ูู ูุญู
    2. ุฑุคูุชูุง
    3. ุฑุณุงูุชูุง
    4. ุฎุฏูุงุชูุง
    5. ููู ุงููุดุฑูุน
    6. ุฃูุฏุงู ุงููุดุฑูุน
    7. ูุทุงู ุงูุนูู ูุงููุณุคูููุงุช
    8. ุงููููุฌูุฉ ุงูููุชุฑุญุฉ ูุชูููุฐ ุงููุดุฑูุน
    9. ุงูุฎุทุฉ ุงูุฒูููุฉ ูููุดุฑูุน
    10. ูุฎุฑุฌุงุช ุงููุดุฑูุน ุงููุชููุนุฉ
    11. ุงููุฑูู ุงูููุชุฑุญ
    12. ูููู ุงููุฑูู ูุฎุจุฑุงุชู
    13. ุงูููุงุญู ุงููููุฉ
    ุงูุฑุฌุงุก ุงูุงุนุชูุงุฏ ุนูู ูุญุชูู ุงููุฑุงุณุฉ ุงููุฑููุฉ ุงูุชู ุชูุถุญ ูุชุทูุจุงุช ุงููุดุฑูุน.
    """
    user_msg = f"ุงุณู ุงููุดุฑูุน: {project}\nุงุณู ุงูุฌูุฉ: {client}\nูุญุชูู ุงููุฑุงุณุฉ:\n{content}"

    chat_response = openai.chat.completions.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": system_msg},
            {"role": "user", "content": user_msg}
        ],
        temperature=0.5,
        max_tokens=3000
    )
    return chat_response.choices[0].message.content

if st.button("๐ ุชูููุฏ ุงูุนุฑุถ ุงูููู"):
    if uploaded_file and project_name and client_name:
        with st.spinner("๐ ุฌุงุฑู ูุฑุงุกุฉ ุงููุฑุงุณุฉ ูุชุญููููุง..."):
            extracted_text = extract_text_from_pdf(uploaded_file)
            proposal_text = generate_proposal(extracted_text, project_name, client_name)

        doc = Document()
        doc.add_heading(f"ุงูุนุฑุถ ุงูููู ููุดุฑูุน {project_name}", level=1)
        doc.add_paragraph(f"ุงูุฌูุฉ: {client_name}")

        for section in proposal_text.split("\n\n"):
            lines = section.strip().split("\n", 1)
            if len(lines) == 2:
                title, content = lines
                doc.add_heading(title.strip(), level=2)
                doc.add_paragraph(content.strip())
            else:
                doc.add_paragraph(section.strip())

        with tempfile.NamedTemporaryFile(delete=False, suffix=".docx") as tmp:
            doc.save(tmp.name)
            tmp_path = tmp.name

        with open(tmp_path, "rb") as f:
            st.download_button("๐ฅ ุชุญููู ุงูุนุฑุถ ุงูููู (Word)", f, file_name=f"ุนุฑุถ_ููู_{project_name}.docx")

        st.success("โ ุชู ุชูููุฏ ุงูุนุฑุถ ุงูููู ุจูุฌุงุญ ุจุงุณุชุฎุฏุงู ChatGPT!")
    else:
        st.error("ูุฑุฌู ุชุนุจุฆุฉ ุฌููุน ุงูุญููู ุงููุทููุจุฉ.")
